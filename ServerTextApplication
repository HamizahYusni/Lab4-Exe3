import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

/**
 * This class launch the server side application using TCP.
 * The server generates current date.
 * Each connected client will received current date from the server.
 * 
 * @author emalianakasmuri
 *
 */

public class ServerTextApplication {

	/**
	 * Main entry point to the server side application
	 * @param args
	 * @throws IOException 
	 */
	public static void main(String[] args) throws IOException {
		
		// Launch the server frame
		ServerTextFrame serverFrame = new ServerTextFrame();
		serverFrame.setVisible(true);
		
		// Binding to a port or any other port no you are fancy of
		int portNo = 4231;
		ServerSocket serverSocket = new ServerSocket(portNo);
		
		//DateGenerator dateGenerator = new DateGenerator();
		
		// Counter to keep track the number of requested connection
		int totalRequest = 0;
		
		// Server needs to be alive forever
		while (true) {
			
			// Message to indicate server is alive
			serverFrame.updateServerStatus(false);
			
			
			// Accept client request for connection
			Socket clientSocket = serverSocket.accept();
			
			// Generate text
			String text = "Hello everyone, my name is Hamizah";
			int noOfWord = 0;  
	          
	        for(int i = 0; i < text.length()-1; i++) {  
	            //Counts all the spaces present in the string  
	            //It doesn't include the first space as it won't be considered as a word  
	            if(text.charAt(i) == ' ' && Character.isLetter(text.charAt(i+1)) && (i > 0)) {  
	                noOfWord++;  
	            }  
	        }  
	        //To count the last word present in the string, increment wordCount by 1  
	        noOfWord++;  
			
			// Create stream to write data on the network
			DataOutputStream outputStream = 
					new DataOutputStream(clientSocket.getOutputStream());
			
			// Send text back to the client
			outputStream.write(noOfWord);
			
			// Close the socket
			clientSocket.close();
		
			// Update the request status
			serverFrame.updateRequestStatus(
					"Data sent to the client: " + text);
			serverFrame.updateRequestStatus("Accepted connection to from the "
					+ "client. Total request = " + ++totalRequest );
			
		}
		
		

	}

}
